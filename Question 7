/*
Given an array arr of N non-negative integers representing the height of blocks. If the width of each block is 1, compute how much water can be trapped between the blocks during the rainy season.
  Example 1:
    Input:
      N = 6
      arr = [3,0,0,2,0,4]
    Output:
      10
*/
import java.util.Scanner;
public class Tester {
    public static void checkWater(int[] arr){
        int maxWaterHeight = 0;
        int c = arr.length;
        int max = arr[0];
        int max_index=0;
        int starting_index = 0;
        int i = 1;
        while(i<c){
            if(arr[i]>max){
                max = arr[i];
                max_index = i;
                for(int k=starting_index+1;k<max_index;k++){
                    maxWaterHeight= maxWaterHeight + (arr[starting_index] - arr[k]);
                }
                starting_index = max_index;
                i = starting_index;
            }
            else{
                i++;
            }

        }
        if(maxWaterHeight>0) {
            System.out.println("Total trapped water: " + maxWaterHeight);
        }
        else{
            System.out.println("No water will be trapped.");
        }
    }

    public static void main(String [] args){
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the length of the Array: ");
        int l = sc.nextInt();
        int [] arr = new int[l];
        System.out.println("Enter the elements:");
        for(int i = 0; i<l; i++){
            arr[i] = sc.nextInt();
        }
        checkWater(arr);
    }
}
